<?xml version="1.0" encoding="utf-8"?>
<StructureDefinition xmlns="http://hl7.org/fhir">
  <url value="http://hl7.org/fhir/6.0/StructureDefinition/extension-PersonalRelationship.confidence" />
  <name value="ExtensionPersonalRelationshipconfidence" />
  <status value="draft" />
  <fhirVersion value="4.0.1" />
  <kind value="complex-type" />
  <abstract value="false" />
  <context>
    <type value="element" />
    <expression value="Basic" />
  </context>
  <type value="Extension" />
  <baseDefinition value="http://hl7.org/fhir/StructureDefinition/Extension" />
  <derivation value="constraint" />
  <differential>
    <element id="Extension.url">
      <path value="Extension.url" />
      <fixedUri value="http://hl7.org/fhir/5.0/StructureDefinition/extension-PersonalRelationship.confidence" />
    </element>
    <element id="Extension.value[x]">
      <path value="Extension.value[x]" />
      <short value="The period of time during which the relationship is active" />
      <definition value="The period of time during which this relationship is or was active. If there are no dates defined, then the interval is unknown." />
      <comment value="If an individual has a relationship with a patient over multiple, non-adjacent periods, there should be a distinct PersonalRelationship instance for each period. For example, if a person is a roommate for a period of time, moves out, and is later a roommate with the same person again, you would have two PersonalRelationship instances.&#xD;&#xA;&#xD;&#xA;Most social relationships are dynamic. For example, an on-again/off-again relationship could be represented as a single PersonalRelationship with multiple periods describing the &quot;on-again&quot; periods. Some relationships, such as biological relationships, may often be considered permanent (ignoring situations where paternity may be disputed). In cases where the relationships is considered permanent, the .period should be omitted." />
      <type>
        <code value="CodeableConcept" />
      </type>
    </element>
  </differential>
</StructureDefinition>